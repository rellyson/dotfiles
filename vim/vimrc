" Total history lines
set history=500

" Mouse support
set mouse=a

" Show line numbers
set number

" Enable filetype plugins
filetype plugin on
filetype indent on

" Autoread when file is changed
set autoread
au FocusGained,BufEnter * silent! checktime

" Set 7 lines to the cursor - when moving vertically using j/k
set so=7

" Avoid garbled characters in Chinese language windows OS
let $LANG='en'
set langmenu=en
source $VIMRUNTIME/delmenu.vim
source $VIMRUNTIME/menu.vim

" Set leader key
let mapleader = " "

" Fast saving
nmap <leader>w :w!<cr>

" Wild menu
set wildmenu

" Ignore some files/folders
set wildignore+=*/.git/*,*/.hg/*,*/.svn/*,*/.DS_Store

" Always show current position
set ruler

" Command bar height
set cmdheight=1

" Search casing
set ignorecase
set smartcase

" Disable annoying sounds
set noerrorbells
set novisualbell
set t_vb=
set tm=500

" Left extra margin
set foldcolumn=1

" Syntax highlight
syntax enable

" Enable regex engine
set regexpengine=0

" Colors
set hlsearch
set background=dark

" Highlight opts
hi FoldColumn ctermbg=none
hi StatusLine ctermbg=none cterm=bold

" Set encoding
set encoding=utf-8

" Always show the status line
set laststatus=2

" Format the status line
set statusline=

" Show formatted mode in statusline
set statusline+=\FILE:\%r%{getcwd()}%h/\%f "get cwd and filename
set statusline+=%m " mods
set statusline+=\ %= " align right
set statusline+=%l/%L[%p%%] " line X and Y/file percentage
set statusline+=\ Col:%c " column number
set statusline+=\ %{&fileencoding?&fileencoding:&encoding} " enconding

" Standard filetype
"set ffs=unix,doc,mac

" Disable backup
set nobackup
set nowb
set noswapfile

" Space instead of tabs
set expandtab
set smarttab
set shiftwidth=4
set tabstop=4

" Linebreak on 500 characters
set lbr
set tw=500

set ai "Auto indent
set si "Smart indent
set wrap "Wrap lines

" Visual mode pressing * or # searches for the current selection
vnoremap <silent> * :<C-u>call VisualSelection('', '')<CR>/<C-R>=@/<CR><CR>
vnoremap <silent> # :<C-u>call VisualSelection('', '')<CR>?<C-R>=@/<CR><CR>

" Remove the Windows ^M - when the encodings gets messed up
noremap <Leader>m mmHmt:%s/<C-V><cr>//ge<cr>'tzt'm

" Toggle paste mode on and off
map <leader>pp :setlocal paste!<cr>

" Pressing ,ss will toggle and untoggle spell checking
map <leader>ss :setlocal spell!<cr>

" Shortcuts using <leader>
map <leader>sn ]s
map <leader>sp [s
map <leader>sa zg
map <leader>s? z=

function! HasPaste()
    if &paste
        return 'PASTE MODE  '
    endif
    return ''
endfunction

" Delete trailing white space on save, useful for some filetypes ;)
fun! CleanExtraSpaces()
    let save_cursor = getpos(".")
    let old_query = getreg('/')
    silent! %s/\s\+$//e
    call setpos('.', save_cursor)
    call setreg('/', old_query)
endfun

if has("autocmd")
    autocmd BufWritePre *.txt,*.js,*.py,*.wiki,*.sh,*.coffee :call CleanExtraSpaces()
endif

